{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 #### create new local git repo ####\
> git init\
\
#### create remote git repo and link local to remote #### \
> git remote add [alias] [remote ssh address]\
> git remote -v\
> git config --global user.name [username]\
> git config --global user.email [useremail]\
> git config --global --list\
\
#### generate ssh-key pair for ssh transmission ####\
> ssh-keygen -t rsa -C [email_address]\
$ you could find your newly generated ssh-key pair on the following position\
\
# Your identification has been saved in /Users/collinsliu/.ssh/id_rsa.\
# Your public key has been saved in /Users/collinsliu/.ssh/id_rsa.pub.\
\
Paste public key to GitHub sshkey\
\
#### test connectivity ####\
> ssh -T git@github.com\
\
#### pull remote repo to local and push content back to remote repo ####\
> git pull [remote alias] [remote branch] --allow-unrelated-histories\
> git push [remote alias] [local branch]:[remote branch]\
\
#### other useful tracking methods ####\
> git log\
> git reflog\
> git status\
}